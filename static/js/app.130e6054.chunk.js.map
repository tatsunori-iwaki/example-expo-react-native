{"version":3,"sources":["public/textures/hardwood2_diffuse.jpg","screen/HomeScreen.js","screen/DetailsScreen.js","screen/PieChartScreen.js","screen/LineChartScreen.js","screen/BarChartScreen.js","screen/TreeJsCubeScreen.js","screen/OrbitControlScreen.js","App.js"],"names":["module","exports","HomeScreen","View","style","styles","container","Text","StatusBar","buttonLayout","Button","title","onPress","props","navigation","navigate","React","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginBottom","DetailsScreen","windowWidth","Dimensions","get","width","windowHeight","height","data","name","population","color","legendFontColor","legendFontSize","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","PieChartScreen","text","accessor","paddingLeft","fontSize","fontWeight","textAlign","margin","labels","datasets","Math","random","LineChartScreen","BarChartScreen","TreeJsCubeScreen","_onGLContextCreate","gl","a","async","renderer","Renderer","setSize","drawingBufferWidth","drawingBufferHeight","scene","THREE","camera","geometry","material","cube","add","position","z","lookAt","setState","animate","requestAnimationFrame","rotation","x","y","render","endFrameEXP","state","OrbitControlsView","this","onContextCreate","OrbitControlScreen","textureLoader","TextureLoader","floorMat","roughness","metalness","bumpScale","load","texturesHardWood2Diffuse","map","wrapS","wrapT","anisotropy","repeat","set","encoding","needsUpdate","floorGeometry","floorMesh","receiveShadow","PI","AppContainer","createAppContainer","createStackNavigator","Home","Details","PieChart","LineChart","BarChart","TreeJsCube","OrbitControl","initialRouteName","App"],"mappings":"yEAAAA,EAAOC,QAAU,IAA0B,+C,spBCItBC,E,0HACnB,WAAU,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,4DACA,kBAACC,EAAA,EAAD,CAAWJ,MAAM,SACjB,kBAACD,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,eAGlD,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,iBACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,gBAGlD,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,kBACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,iBAGlD,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,uBACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,gBAGlD,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,yBACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,kBAGlD,kBAACZ,EAAA,EAAD,CAAMC,MAAOC,EAAOI,cAClB,kBAACC,EAAA,EAAD,CACEC,MAAM,2BACNC,QAAS,kBAAM,EAAKC,MAAMC,WAAWC,SAAS,yB,GAvClBC,IAAMC,WA+CxCZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,UAElBd,aAAc,CACZe,aAAc,M,mbCxDGC,E,0HACnB,WACE,OACE,kBAACtB,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,4B,GAJmCS,IAAMC,WAU3CZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,Y,+bCdpB,IAAMG,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OACxCC,EAAO,CACX,CACEC,KAAM,QACNC,WAAY,GACZC,MAAO,qBACPC,gBAAiB,UACjBC,eAAgB,IAElB,CACEJ,KAAM,UACNC,WAAY,GACZC,MAAO,wBACPC,gBAAiB,UACjBC,eAAgB,IAElB,CACEJ,KAAM,UACNC,WAAY,GACZC,MAAO,wBACPC,gBAAiB,UACjBC,eAAgB,IAElB,CACEJ,KAAM,WACNC,WAAY,GACZC,MAAO,wBACPC,gBAAiB,UACjBC,eAAgB,IAElB,CACEJ,KAAM,SACNC,WAAY,EACZC,MAAO,wBACPC,gBAAiB,UACjBC,eAAgB,KAGdC,EAAc,CAClBC,uBAAwB,QACxBC,8BAA+B,EAC/BC,qBAAsB,QACtBC,4BAA6B,EAC7BP,MAAO,iBAAiB,UAGLQ,E,0HACnB,WACE,OACE,kBAACxC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOuC,MAApB,4BACA,kBAAC,IAAD,CACEZ,KAAMA,EACNH,MAAqB,IAAdH,EACPK,OAAQD,EAAe,EACvBQ,YAAaA,EACbO,SAAS,aACTxB,gBAAgB,cAChByB,YAAa,U,GAZqB9B,IAAMC,WAmB5CZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,KAAM,EACNG,eAAgB,SAChBD,WAAY,SACZD,gBAAiB,QAEnBuB,KAAM,CACJG,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,OAAQ,M,+aC7EZ,IAAMxB,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OACxCC,EAAO,CACXmB,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,QACzDC,SAAU,CACR,CACEpB,KAAM,CACY,IAAhBqB,KAAKC,SACW,IAAhBD,KAAKC,SACW,IAAhBD,KAAKC,SACW,IAAhBD,KAAKC,SACW,IAAhBD,KAAKC,SACW,IAAhBD,KAAKC,aAKPhB,EAAc,CAClBC,uBAAwB,QACxBC,8BAA+B,EAC/BC,qBAAsB,QACtBC,4BAA6B,EAC7BP,MAAO,iBAAiB,UAGLoB,E,0HACnB,WACE,OACE,kBAACpD,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOuC,MAApB,kCACA,kBAAC,IAAD,CACEZ,KAAMA,EACNH,MAAqB,IAAdH,EACPK,OAAQD,EAAe,EACvBQ,YAAaA,EACbO,SAAS,aACTxB,gBAAgB,cAChByB,YAAa,U,GAZsB9B,IAAMC,WAmB7CZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,KAAM,EACNG,eAAgB,SAChBD,WAAY,SACZD,gBAAiB,QAEnBuB,KAAM,CACJG,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,OAAQ,M,+aCvDZ,IAAMxB,EAAcC,IAAWC,IAAI,UAAUC,MACvCC,EAAeH,IAAWC,IAAI,UAAUG,OACxCC,EAAO,CACXmB,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,QACzDC,SAAU,CACR,CACEpB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,OAI3BM,EAAc,CAClBC,uBAAwB,QACxBC,8BAA+B,EAC/BC,qBAAsB,QACtBC,4BAA6B,EAC7BP,MAAO,iBAAiB,UAGLqB,E,0HACnB,WACE,OACE,kBAACrD,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOuC,MAApB,4BACA,kBAAC,IAAD,CACEZ,KAAMA,EACNH,MAAqB,IAAdH,EACPK,OAAQD,EAAe,EACvBQ,YAAaA,EACbO,SAAS,aACTxB,gBAAgB,cAChByB,YAAa,U,GAZqB9B,IAAMC,WAmB5CZ,EAASa,IAAWC,OAAO,CAC/Bb,UAAW,CACTc,KAAM,EACNG,eAAgB,SAChBD,WAAY,SACZD,gBAAiB,QAEnBuB,KAAM,CACJG,SAAU,GACVC,WAAY,OACZC,UAAW,SACXC,OAAQ,M,yeC9CSO,G,iCACnB,WAAY5C,GAAQ,IAAD,sBACjB,cAAMA,IAKR6C,mBAAqB,SAAOC,GAAP,yBAAAC,EAAAC,OAAA,iDACbC,EAAW,IAAIC,KAAS,CAAEJ,QACvBK,QAAQL,EAAGM,mBAAoBN,EAAGO,qBAErCC,EAAQ,IAAIC,QACZC,EAAS,IAAID,oBACjB,GAAIT,EAAGM,mBAAqBN,EAAGO,oBAAqB,GAAK,KAErDI,EAAW,IAAIF,cAAkB,EAAG,EAAG,GACvCG,EAAW,IAAIH,oBAAwB,CAAEjC,MAAO,QAChDqC,EAAO,IAAIJ,OAAWE,EAAUC,GACtCJ,EAAMM,IAAID,GAEVH,EAAOK,SAASC,EAAI,EACpBN,EAAOO,OAAOJ,EAAKE,UACnB,EAAKG,SAAS,CACZR,OAAQA,IAGM,SAAVS,IACJC,sBAAsBD,GACtBN,EAAKQ,SAASC,GAAK,IACnBT,EAAKQ,SAASE,GAAK,IACnBpB,EAASqB,OAAOhB,EAAOE,GACvBV,EAAGyB,cAELN,GA1BmB,8DAJnB,EAAKO,MAAQ,CACXhB,OAAQ,MAHO,E,kCAkCnB,WACE,OACE,gBAACiB,GAAA,EAAD,CAAmBlF,MAAO,CAAEgB,KAAM,GAAKiD,OAAQkB,KAAKF,MAAMhB,QACxD,gBAAC,KAAD,CACEjE,MAAO,CAAEgB,KAAM,GACfoE,gBAAiBD,KAAK7B,0B,GAxCc1C,a,ycCCzByE,G,iCACnB,WAAY5E,GAAQ,IAAD,sBACjB,cAAMA,IAKR6C,mBAAqB,SAAOC,GAAP,2BAAAC,EAAAC,OAAA,iDACbC,EAAW,IAAIC,KAAS,CAAEJ,QACvBK,QAAQL,EAAGM,mBAAoBN,EAAGO,qBAErCwB,EAAgB,IAAIC,KACpBC,EAAW,IAAIxB,uBACnB,CAAEyB,UAAW,GAAK1D,MAAO,SAAU2D,UAAW,GAAKC,UAAW,OAEhEL,EAAcM,KAAKC,MAA0B,SAAUC,GACrDA,EAAIC,MAAQ/B,iBACZ8B,EAAIE,MAAQhC,iBACZ8B,EAAIG,WAAa,EACjBH,EAAII,OAAOC,IAAI,GAAI,IACnBL,EAAIM,SAAWpC,eACfwB,EAASM,IAAMA,EACfN,EAASa,aAAc,KAGnBtC,EAAQ,IAAIC,QACZsC,EAAgB,IAAItC,gBAAoB,GAAI,KAC5CuC,EAAY,IAAIvC,OAAWsC,EAAed,IACtCgB,eAAgB,EAC1BD,EAAU3B,SAASC,GAAM5B,KAAKwD,GAAK,EACnC1C,EAAMM,IAAIkC,GACVxC,EAAMM,IAAI,IAAIL,eAAmB,WAE3BC,EAAS,IAAID,oBAAwB,GAAIT,EAAGM,mBAAqBN,EAAGO,oBAAqB,GAAK,MAC7FQ,SAASO,GAAM,EACtBZ,EAAOK,SAASC,EAAI,EACpBN,EAAOK,SAASQ,EAAI,EACpB,EAAKL,SAAS,CAAER,OAAQA,IAER,SAAVS,IACJC,sBAAsBD,GACtBhB,EAASqB,OAAOhB,EAAOE,GACvBV,EAAGyB,cAELN,GArCmB,8DAJnB,EAAKO,MAAQ,CACXhB,OAAQ,MAHO,E,kCA6CnB,WACE,OACE,gBAACiB,GAAA,EAAD,CAAmBlF,MAAO,CAAEgB,KAAM,GAAKiD,OAAQkB,KAAKF,MAAMhB,QACxD,gBAAC,KAAD,CACEjE,MAAO,CAAEgB,KAAM,GACfoE,gBAAiBD,KAAK7B,0B,GAnDgB1C,a,gbCIhD,IAAM8F,GAAeC,6BACnBC,YACE,CACEC,KAAM/G,EACNgH,QAASzF,EACT0F,SAAUxE,EACVyE,UAAW7D,EACX8D,SAAU7D,EACV8D,WAAY7D,GACZ8D,aAAc9B,IAEhB,CACE+B,iBAAkB,UAIHC,G,2HACnB,WACE,OAAO,kBAACX,GAAD,U,GAFsB9F,IAAMC,Y","file":"static/js/app.130e6054.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hardwood2_diffuse.e765a9c5.jpg\";","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nexport default class HomeScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Hello, Open up App.js to start working on your app!</Text>\n        <StatusBar style=\"auto\" />\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to Details\"\n            onPress={() => this.props.navigation.navigate('Details')}\n          />\n        </View>\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to PieChart\"\n            onPress={() => this.props.navigation.navigate('PieChart')}\n          />\n        </View>\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to LineChart\"\n            onPress={() => this.props.navigation.navigate('LineChart')}\n          />\n        </View>\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to BarChartScreen\"\n            onPress={() => this.props.navigation.navigate('BarChart')}\n          />\n        </View>\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to TreeJsCubeScreen\"\n            onPress={() => this.props.navigation.navigate('TreeJsCube')}\n          />\n        </View>\n        <View style={styles.buttonLayout}>\n          <Button\n            title=\"Go to OrbitControlScreen\"\n            onPress={() => this.props.navigation.navigate('OrbitControl')}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonLayout: {\n    marginBottom: 10\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nexport default class DetailsScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text>Details Screen</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\nimport { PieChart } from \"react-native-chart-kit\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst data = [\n  {\n    name: \"Seoul\",\n    population: 60,\n    color: \"hsla(0, 0%, 0%, 1)\",\n    legendFontColor: \"#7F7F7F\",\n    legendFontSize: 15\n  },\n  {\n    name: \"Toronto\",\n    population: 40,\n    color: \"hsla(0, 0%, 20%, 0.8)\",\n    legendFontColor: \"#7F7F7F\",\n    legendFontSize: 15\n  },\n  {\n    name: \"Beijing\",\n    population: 33,\n    color: \"hsla(0, 0%, 40%, 0.6)\",\n    legendFontColor: \"#7F7F7F\",\n    legendFontSize: 15\n  },\n  {\n    name: \"New York\",\n    population: 21,\n    color: \"hsla(0, 0%, 60%, 0.4)\",\n    legendFontColor: \"#7F7F7F\",\n    legendFontSize: 15\n  },\n  {\n    name: \"Moscow\",\n    population: 9,\n    color: \"hsla(0, 0%, 80%, 0.2)\",\n    legendFontColor: \"#7F7F7F\",\n    legendFontSize: 15,\n  }\n];\nconst chartConfig = {\n  backgroundGradientFrom: \"black\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"black\",\n  backgroundGradientToOpacity: 0,\n  color: (opacity = 1) => \"black\",\n};\n\nexport default class PieChartScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>円グラフ</Text>\n        <PieChart\n          data={data}\n          width={windowWidth * 0.99}\n          height={windowHeight / 4}\n          chartConfig={chartConfig}\n          accessor=\"population\"\n          backgroundColor=\"transparent\"\n          paddingLeft={10}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  text: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    margin: 10,\n  },\n});","import React from 'react';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\nimport { LineChart } from \"react-native-chart-kit\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n  datasets: [\n    {\n      data: [\n        Math.random() * 100,\n        Math.random() * 100,\n        Math.random() * 100,\n        Math.random() * 100,\n        Math.random() * 100,\n        Math.random() * 100\n      ]\n    }\n  ]\n};\nconst chartConfig = {\n  backgroundGradientFrom: \"black\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"black\",\n  backgroundGradientToOpacity: 0,\n  color: (opacity = 1) => \"black\",\n};\n\nexport default class LineChartScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>折線グラフ</Text>\n        <LineChart\n          data={data}\n          width={windowWidth * 0.99}\n          height={windowHeight / 4}\n          chartConfig={chartConfig}\n          accessor=\"population\"\n          backgroundColor=\"transparent\"\n          paddingLeft={10}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  text: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    margin: 10,\n  },\n});","import React from 'react';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\nimport { BarChart } from \"react-native-chart-kit\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\nconst windowHeight = Dimensions.get(\"window\").height;\nconst data = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n  datasets: [\n    {\n      data: [20, 45, 28, 80, 99, 43]\n    }\n  ]\n};\nconst chartConfig = {\n  backgroundGradientFrom: \"black\",\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientTo: \"black\",\n  backgroundGradientToOpacity: 0,\n  color: (opacity = 1) => \"black\",\n};\n\nexport default class BarChartScreen extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.text}>棒グラフ</Text>\n        <BarChart\n          data={data}\n          width={windowWidth * 0.99}\n          height={windowHeight / 4}\n          chartConfig={chartConfig}\n          accessor=\"population\"\n          backgroundColor=\"transparent\"\n          paddingLeft={10}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  text: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    margin: 10,\n  },\n});","import * as React from 'react';\nimport * as THREE from 'three'\nimport { GLView } from 'expo-gl';\nimport { Renderer } from 'expo-three';\nimport OrbitControlsView from 'expo-three-orbit-controls';\n\nexport default class TreeJsCubeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      camera: null\n    };\n  }\n  _onGLContextCreate = async (gl) => {\n    const renderer = new Renderer({ gl });\n    renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(\n      75, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 1000\n    );\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    camera.position.z = 5;\n    camera.lookAt(cube.position);\n    this.setState({\n      camera: camera\n    })\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.07;\n      cube.rotation.y += 0.04;\n      renderer.render(scene, camera);\n      gl.endFrameEXP();\n    }\n    animate();\n  };\n  render() {\n    return (\n      <OrbitControlsView style={{ flex: 1 }} camera={this.state.camera}>\n        <GLView\n          style={{ flex: 1 }}\n          onContextCreate={this._onGLContextCreate}\n        />\n      </OrbitControlsView>\n    )\n  }\n}\n","import * as React from 'react';\nimport * as THREE from 'three'\nimport { GLView } from 'expo-gl';\nimport { Renderer, TextureLoader } from 'expo-three';\nimport OrbitControlsView from 'expo-three-orbit-controls';\nimport texturesHardWood2Diffuse from '../public/textures/hardwood2_diffuse.jpg'\n\nexport default class OrbitControlScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      camera: null\n    };\n  }\n  _onGLContextCreate = async (gl) => {\n    const renderer = new Renderer({ gl });\n    renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    const textureLoader = new TextureLoader();\n    const floorMat = new THREE.MeshStandardMaterial(\n      { roughness: 0.8, color: 0xffffff, metalness: 0.2, bumpScale: 0.0005 }\n    );\n    textureLoader.load(texturesHardWood2Diffuse, function (map) {\n      map.wrapS = THREE.RepeatWrapping;\n      map.wrapT = THREE.RepeatWrapping;\n      map.anisotropy = 4;\n      map.repeat.set(10, 24);\n      map.encoding = THREE.sRGBEncoding;\n      floorMat.map = map;\n      floorMat.needsUpdate = true;\n    });\n\n    const scene = new THREE.Scene();\n    const floorGeometry = new THREE.PlaneGeometry(20, 20);\n    const floorMesh = new THREE.Mesh(floorGeometry, floorMat);\n    floorMesh.receiveShadow = true;\n    floorMesh.rotation.x = - Math.PI / 2.0;\n    scene.add(floorMesh);\n    scene.add(new THREE.AmbientLight(0x666666));\n\n    const camera = new THREE.PerspectiveCamera(75, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 1000);\n    camera.position.x = - 4;\n    camera.position.z = 4;\n    camera.position.y = 2;\n    this.setState({ camera: camera })\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n      gl.endFrameEXP();\n    }\n    animate();\n  };\n  render() {\n    return (\n      <OrbitControlsView style={{ flex: 1 }} camera={this.state.camera}>\n        <GLView\n          style={{ flex: 1 }}\n          onContextCreate={this._onGLContextCreate}\n        />\n      </OrbitControlsView>\n    )\n  }\n}\n","import React from 'react';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport HomeScreen from \"./screen/HomeScreen\";\nimport DetailsScreen from \"./screen/DetailsScreen\";\nimport PieChartScreen from \"./screen/PieChartScreen\";\nimport LineChartScreen from \"./screen/LineChartScreen\";\nimport BarChartScreen from \"./screen/BarChartScreen\";\nimport TreeJsCubeScreen from \"./screen/TreeJsCubeScreen\";\nimport OrbitControlScreen from \"./screen/OrbitControlScreen\";\n\nconst AppContainer = createAppContainer(\n  createStackNavigator(\n    {\n      Home: HomeScreen,\n      Details: DetailsScreen,\n      PieChart: PieChartScreen,\n      LineChart: LineChartScreen,\n      BarChart: BarChartScreen,\n      TreeJsCube: TreeJsCubeScreen,\n      OrbitControl: OrbitControlScreen,\n    },\n    {\n      initialRouteName: 'Home',\n    }\n  )\n);\nexport default class App extends React.Component {\n  render() {\n    return <AppContainer />;\n  }\n}\n"],"sourceRoot":""}